#=================================================
# https://github.com/danxiaonuo/luci
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: danxiaonuo
# Blog: https://www.danxiaonuo.com
#=================================================

name: 自动同步luci源码包

# 设置触发条件
on:
# 点击★开始触发更新
  watch:  
     types: [started]
  
# 每周三的晚上3点钟自动更新
  schedule:
     - cron: '0 2 * * 3'
     
# 环境变量
env:
   # 源码仓库地址
   REPO_URL: https://github.com/project-openwrt/luci
   # 源码分支
   REPO_BRANCH: openwrt-18.06
   # 时区设置
   TZ: Asia/Shanghai
   # 上传分支
   UPLOAD_BRANCH: true
   # Github 用户名
   GITHUB_USER_NAME: danxiaonuo
   # Github 邮箱
   GITHUB_USER_EMAIL: ${{ secrets.EMAIL }}
   # Github
   GITHUB_RROJECT: github.com/danxiaonuo/luci.git
   # 分支
   BRANCH: master
   # GITHUB项目路径
   GITHUB_PATH: /home/runner/work/AutoSync/AutoSync/luci
   
   # 任务集
jobs:
  build:
    # 选择虚拟环境
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    # 运行步骤
    steps:
    
    # 检出master分支
    - name: 检出master分支
      uses: actions/checkout@master
      
    # 初始化系统环境
    - name: 初始化系统环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y install git git-core subversion curl wget
        
    # 克隆源码
    - name: 克隆源码
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH luci
        cd luci
        rm -rf .svn && rm -rf *.md && rm -rf LICENSE rm -rf README MAINTAINERS LICENSE
        find ${{ env.GITHUB_PATH }}/. -type d -iname '.svn' | xargs rm -rf
        find ${{ env.GITHUB_PATH }}/. -type d -iname '.git' | xargs rm -rf
        cp -rf /home/runner/work/AutoSync/AutoSync/server/luci/LICENSE .
      
    # 上传到分支
    - name: 上传到分支
      env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      run: |
          cd luci/
          git init
          git config user.name $GITHUB_USER_NAME
          git config user.email $GITHUB_USER_EMAIL
          git add .
          git commit -a -m "Update luci"
          git push --force --quiet https://${{ secrets.RELEASE_TOKEN }}@$GITHUB_RROJECT HEAD:$BRANCH
